# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-09-06 10:46
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import zaakmagazijn.rsgb.models.datatypes
import zaakmagazijn.utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AardZakelijkRecht',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_aard_zakelijk_recht', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(99)])),
                ('naam_aard_zakelijk_recht', models.TextField()),
                ('begindatum_geldigheid_aard_zakelijk_recht', zaakmagazijn.utils.fields.StUFDateField(max_length=9)),
                ('einddatum_geldigheid_aard_zakelijk_recht', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='AcademischeTitel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academische_titelcode', models.CharField(help_text='Een code die aangeeft welke academische titel behoort tot de naam.', max_length=3, validators=[django.core.validators.RegexValidator('([A-Z,a-z])\\w+')])),
                ('omschrijving_academische_titel', models.CharField(help_text='De omschrijving behorende bij NEN-tabel Academische titelcode.', max_length=80)),
                ('positie_academische_titel_tov_naam', models.CharField(choices=[('J', 'Ja'), ('N', 'Nee')], help_text='Aanduiding of de academische titel voorafgaand aan de voornamen of achter de geslachtsnaam wordt geplaatst.', max_length=1)),
                ('datum_begin_geldigheid_titel', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de ACADEMISCHE TITEL is ontstaan.', max_length=9)),
                ('datum_einde_geldigheid_titel', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de ACADEMISCHE TITEL is opgeheven.', max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Adres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('woonplaatsnaam', models.CharField(max_length=80)),
                ('naam_openbare_ruimte', models.CharField(help_text='Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming', max_length=80)),
                ('huisletter', models.CharField(blank=True, max_length=1, null=True)),
                ('huisnummer', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999)])),
                ('huisnummertoevoeging', models.CharField(blank=True, max_length=4, null=True)),
                ('identificatie', models.CharField(max_length=4)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdresMetPostcode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('woonplaatsnaam', models.CharField(max_length=80)),
                ('naam_openbare_ruimte', models.CharField(help_text='Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming', max_length=80)),
                ('huisletter', models.CharField(blank=True, max_length=1, null=True)),
                ('huisnummer', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999)])),
                ('huisnummertoevoeging', models.CharField(blank=True, max_length=4, null=True)),
                ('postcode', models.CharField(blank=True, max_length=7, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdresseerbaarObjectAanduiding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('huisletter', models.CharField(blank=True, max_length=1, null=True)),
                ('huisnummer', models.CharField(max_length=5)),
                ('huisnummertoevoeging', models.CharField(max_length=4)),
                ('postcode', models.CharField(blank=True, max_length=7, null=True)),
                ('datum_begin_geldigheid_adresseerbaar_object_aanduiding', zaakmagazijn.utils.fields.StUFDateField(max_length=9)),
                ('datum_einde_geldigheid_adresseerbaar_object_aanduiging', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AkrKadastraleGemeentecode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_akr_kadastrale_gemeentecode', models.CharField(help_text='Een volgens de Dienst van het Kadaster unieke code behorende bij de ARK code kadastrale gemeente.', max_length=5)),
                ('akr_code', models.TextField(help_text='De AKR code van kadastrale gemeente volgens de Dienst van het Kadaster.')),
                ('begindatum_geldigheid_akr_code', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de AKR code kadastrale gemeente is ontstaan.', max_length=9)),
                ('einddatum_geldigheid_akr_code', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de AKR code kadastrale gemeente is opgeheven.', max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='BAGObjectnummering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gemeentecode', models.CharField(max_length=4)),
                ('objecttypecode', models.CharField(choices=[('01', 'verblijfsobject'), ('02', 'ligplaats'), ('03', 'standplaats'), ('10', 'pand'), ('20', 'nummeraanduiding'), ('30', 'openbare ruimte'), ('90', 'overig adreseerbaar object aanduiding'), ('91', 'overig gebouw object'), ('92', 'overig benoemd terrein')], max_length=40)),
                ('objectvolgnummer', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
            ],
        ),
        migrations.CreateModel(
            name='BasisAdres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('woonplaatsnaam', models.CharField(max_length=80)),
                ('naam_openbare_ruimte', models.CharField(help_text='Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming', max_length=80)),
                ('huisletter', models.CharField(blank=True, max_length=1, null=True)),
                ('huisnummer', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999)])),
                ('huisnummertoevoeging', models.CharField(blank=True, max_length=4, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompositeID',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('namespace', models.TextField(validators=[zaakmagazijn.rsgb.models.datatypes.validate_most_text_cases])),
                ('lokaal_id', models.TextField(validators=[zaakmagazijn.rsgb.models.datatypes.validate_most_text_cases])),
                ('versie', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Deelobjectcode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deelobjectcode', models.CharField(max_length=4)),
                ('naam_deelobjectcode', models.TextField()),
                ('begindatum_geldigheid_deelobjectcode', zaakmagazijn.utils.fields.StUFDateField(max_length=9)),
                ('einddatum_geldigheid_deelobjectcode', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='KadastraleAanduiding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kadastralegemeentecode', models.CharField(max_length=5)),
                ('perceelnummer', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999)])),
                ('sectie', models.CharField(max_length=2)),
                ('appartementsrechtvolgnummer', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9999)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KadastraleAanduidingAppartementsRecht',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kadastralegemeentecode', models.CharField(max_length=5)),
                ('perceelnummer', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999)])),
                ('sectie', models.CharField(max_length=2)),
                ('appartementsrecht', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KadastraleAanduidingKadastraalPerceel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kadastralegemeentecode', models.CharField(max_length=5)),
                ('perceelnummer', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999)])),
                ('sectie', models.CharField(max_length=2)),
                ('deelperceelnummer', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LandGebied',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landcode', models.CharField(help_text='De code, behorende bij de landnaam, zoals opgenomen in de Land/Gebied-tabel van de BRP.', max_length=4)),
                ('landnaam', models.CharField(help_text='De naam van het land, zoals opgenomen in de Land/Gebied-tabel van de BRP.', max_length=40)),
                ('ingangsdatum_land', zaakmagazijn.utils.fields.StUFDateField(max_length=9)),
                ('einddatum_land', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9)),
                ('landcode_iso', models.CharField(blank=True, max_length=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NaamAanschrijving',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voorletters_aanschrijving', models.CharField(blank=True, help_text='De voorletters waarmee een persoon aangeschreven wil worden.', max_length=20, null=True)),
                ('voornamen_aanschrijving', models.CharField(blank=True, help_text='Voornamen bij de naam die de persoon wenst te voeren.', max_length=200, null=True)),
                ('geslachtsnaam_aanschrijving', models.CharField(help_text='Geslachtsnaam die de persoon wenst te voeren', max_length=200)),
                ('aanhef_aanschrijving', models.CharField(help_text='De aanhef waarmee de persoon aangeschreven wil worden.', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='NEN360ID',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('namespace', models.TextField(validators=[zaakmagazijn.rsgb.models.datatypes.validate_most_text_cases])),
                ('lokaal_id', models.TextField(validators=[zaakmagazijn.rsgb.models.datatypes.validate_most_text_cases])),
                ('versie', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OpenbareRuimte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_openbare_ruimte', models.CharField(choices=[('Naamgeving uitgegeven', 'Naamgeving uitgegeven'), ('Naamgeving ingetrokken', 'Naamgeving ingetrokken')], max_length=25)),
                ('naam_openbare_ruimte', models.CharField(help_text='Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming', max_length=80)),
                ('indicatie_geconstateerde_openbare_ruimte', models.CharField(choices=[('J', 'Ja'), ('N', 'Nee')], max_length=1)),
                ('type_openbare_ruimte', models.CharField(choices=[('weg', 'weg'), ('water', 'water'), ('spoorbaan', 'spoorbaan'), ('terrein', 'terrein'), ('kunstwerk', 'kunstwerk'), ('landschappelijk gebied', 'landschappelijk gebied'), ('functioneel gebied', 'functioneel gebied'), ('administratief gebied', 'administratief gebied')], max_length=36)),
                ('straatnaam', models.CharField(help_text='De officiële straatnaam zoals door het bevoegd gemeentelijk orgaan is vastgesteld, zo nodig ingekort conform de specificaties van de NEN 5825.', max_length=24)),
                ('huisnummerrange_even_nummers', models.BigIntegerField(validators=[django.core.validators.MaxValueValidator(99999999999)])),
                ('huisnummerrange_oneven_nummers', models.BigIntegerField(validators=[django.core.validators.MaxValueValidator(99999999999)])),
                ('huisnummerrange_even_en_oneven_nummers', models.BigIntegerField(validators=[django.core.validators.MaxValueValidator(99999999999)])),
                ('datum_begin_geldigheid_openbare_ruimte', zaakmagazijn.utils.fields.StUFDateField(max_length=9)),
                ('datum_einde_geldigheid_openbare_ruimte', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9, null=True)),
                ('identiefcatie_imgeoopr', models.ForeignKey(help_text='ruimte zoals is toegekend in de IMGeo administratie', on_delete=django.db.models.deletion.CASCADE, to='rsgb.NEN360ID')),
                ('identiefcatiecode_openbare_ruimte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.BAGObjectnummering')),
            ],
        ),
        migrations.CreateModel(
            name='PostAdres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postadres_postcode', models.CharField(max_length=7)),
                ('postadrestype', models.CharField(choices=[('A', 'Antwoordnummer'), ('P', 'Postbusnummer')], max_length=1)),
                ('postbus_of_antwoordnummer', models.CharField(max_length=5)),
                ('woonplaatsnaam', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='SoortWOZObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soort_objectcode', models.CharField(max_length=4)),
                ('naam_soort_objectocde', models.TextField()),
                ('opmerking_soort_objectcode', models.TextField()),
                ('begindatum_geldigheid_soort_objectcode', zaakmagazijn.utils.fields.StUFDateField(max_length=9)),
                ('einddatum_geldigheid_soort_objectcode', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='TypeKadastraleAanduiding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('perceelnummer', models.PositiveSmallIntegerField()),
                ('sectie', models.CharField(max_length=2)),
                ('appartementsrechtvolgnummer', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9999)])),
                ('kadastrale_gemeentecode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.AkrKadastraleGemeentecode')),
            ],
        ),
        migrations.CreateModel(
            name='TypeLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labelTekst', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TypeLabelpositie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='VerblijfAdres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('woonplaatsnaam', models.CharField(max_length=80)),
                ('naam_openbare_ruimte', models.CharField(help_text='Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming', max_length=80)),
                ('huisletter', models.CharField(blank=True, max_length=1, null=True)),
                ('huisnummer', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999)])),
                ('huisnummertoevoeging', models.CharField(blank=True, max_length=4, null=True)),
                ('straatnaam', models.CharField(help_text='De officiële straatnaam zoals door het bevoegd gemeentelijk orgaan is vastgesteld, zo nodig ingekort conform de specificaties van de NEN 5825.', max_length=24)),
                ('postcode', models.CharField(blank=True, max_length=7, null=True)),
                ('locatie_beschrijving', models.CharField(blank=True, help_text='Een geheel of gedeeltelijke omschrijving van de ligging van een object.', max_length=35, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VerblijfBuitenland',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adres_buitenland_1', models.CharField(blank=True, max_length=35, null=True)),
                ('adres_buitenland_2', models.CharField(blank=True, max_length=35, null=True)),
                ('adres_buitenland_3', models.CharField(blank=True, max_length=35, null=True)),
                ('land', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.LandGebied')),
            ],
        ),
        migrations.CreateModel(
            name='Voorvoegsel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voorvoegselnummer', models.CharField(help_text='Het identificerende nummer van het voorvoegsel', max_length=3, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('lo3_voorvoegsel', models.CharField(max_length=80)),
                ('voorvoegsel', models.CharField(max_length=80)),
                ('scheidingsteken', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='WoonPlaats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('woonplaatsidentificatie', models.CharField(max_length=4)),
                ('woonplaatsnaam', models.CharField(max_length=80)),
                ('woonplaatsnaam_nen', models.CharField(blank=True, max_length=24, null=True)),
                ('indicatie_geconstanteerde_woonplaats', models.CharField(choices=[('J', 'Ja'), ('N', 'Nee')], max_length=1)),
                ('woonplaatsstatus', models.CharField(choices=[('Woonplaats aangewezen', 'Woonplaats aangewezen'), ('Woonplaats ingetrokken', 'Woonplaats ingetrokken')], max_length=100)),
                ('datum_begin_geldigheid_woonplaats', zaakmagazijn.utils.fields.StUFDateField(max_length=9)),
                ('datum_einde_geldigheid_woonplaats', zaakmagazijn.utils.fields.StUFDateField(max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Correspondentieadres',
            fields=[
                ('adresmetpostcode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rsgb.AdresMetPostcode')),
                ('straatnaam', models.CharField(help_text='De officiële straatnaam zoals door het bevoegd gemeentelijk orgaan is vastgesteld, zo nodig ingekort conform de specificaties van de NEN 5825.', max_length=24)),
            ],
            options={
                'abstract': False,
            },
            bases=('rsgb.adresmetpostcode',),
        ),
        migrations.AddField(
            model_name='typelabel',
            name='labelPositie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.TypeLabelpositie'),
        ),
        migrations.AddField(
            model_name='openbareruimte',
            name='label_naam_openbare_ruimte',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.TypeLabel'),
        ),
        migrations.AddField(
            model_name='adresseerbaarobjectaanduiding',
            name='openbareruimte',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.OpenbareRuimte'),
        ),
        migrations.AddField(
            model_name='adresseerbaarobjectaanduiding',
            name='woonplaats',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.WoonPlaats'),
        ),
        migrations.CreateModel(
            name='Bezoekadres',
            fields=[
                ('correspondentieadres_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rsgb.Correspondentieadres')),
            ],
            options={
                'abstract': False,
            },
            bases=('rsgb.correspondentieadres',),
        ),
        migrations.CreateModel(
            name='Locatieadres',
            fields=[
                ('correspondentieadres_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rsgb.Correspondentieadres')),
            ],
            options={
                'abstract': False,
            },
            bases=('rsgb.correspondentieadres',),
        ),
    ]
