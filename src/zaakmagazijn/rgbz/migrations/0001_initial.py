# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-09-11 15:13
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import zaakmagazijn.rgbz.validators
import zaakmagazijn.utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rsgb', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnderZaakObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ander_zaakobject_aanduiding', models.CharField(help_text='Een identificerende beschrijving', max_length=80)),
                ('ander_zaakobject_omschrijving', models.CharField(help_text='Een korte omschrijving over de aard van het andere zaak object', max_length=80)),
                ('ander_zaakobject_lokatie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van de ligging of de omtrek van het ANDER ZAAKOBJECT.', null=True)),
                ('ander_zaakobject_registratie', models.CharField(blank=True, help_text='De naam van de registratie waarin gegevens van het ANDER ZAAKOBJECT worden beheerd.', max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Andere zaak objecten',
            },
        ),
        migrations.CreateModel(
            name='BesluitInformatieObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'BesluitInformatieObjecten',
            },
        ),
        migrations.CreateModel(
            name='BesluitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('besluittypeomschrijving', models.CharField(blank=True, help_text='Omschrijving van de aard van BESLUITen van het BESLUITTYPE.', max_length=80, null=True)),
                ('domein', models.CharField(help_text='Een afkorting waarmee wordt aangegeven voor welk domein in de CATALOGUS ZAAKTYPEn zijn uitgewerkt.', max_length=5)),
                ('rsin', models.PositiveIntegerField(help_text='Het door een kamer toegekend uniek nummer voor de INGESCHREVEN NIET-NATUURLIJK PERSOON')),
                ('besluittypeomschrijving_generiek', models.CharField(blank=True, help_text='Algemeen gehanteerde omschrijving van de aard van BESLUITen van het BESLUITTYPE', max_length=80, null=True)),
                ('besluitcategorie', models.CharField(blank=True, help_text='Typering van de aard van BESLUITen van het BESLUITTYPE.', max_length=40, null=True)),
                ('reactietermijn', models.PositiveSmallIntegerField(help_text='Het aantal dagen, gerekend vanaf de verzend- of publicatiedatum, waarbinnen verweer tegen een besluit van het besluittype mogelijk is.', validators=[django.core.validators.MaxValueValidator(999)])),
                ('publicatie_indicatie', models.CharField(choices=[('J', 'Ja'), ('N', 'Nee')], help_text='Aanduiding of BESLUITen van dit BESLUITTYPE gepubliceerd moeten worden.', max_length=1)),
                ('publicatietekst', models.TextField(blank=True, help_text='De generieke tekst van de publicatie van BESLUITen van dit BESLUITTYPE', max_length=1000, null=True)),
                ('publicatietermijn', models.PositiveSmallIntegerField(blank=True, help_text='Het aantal dagen, gerekend vanaf de verzend- of publicatiedatum, dat BESLUITen van dit BESLUITTYPE gepubliceerd moeten blijven.', null=True, validators=[django.core.validators.MaxValueValidator(999)])),
                ('datum_begin_geldigheid_besluittype', zaakmagazijn.utils.fields.StUFDateField(max_length=9)),
                ('datum_einde_geldigheid_besluittype', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bestandsnaam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(help_text='De naam van het fysieke bestand zonder aanduiding van het formaat in een extensie.', max_length=255, validators=[zaakmagazijn.rgbz.validators.validate_physical_file_name])),
                ('extensie', models.CharField(blank=True, help_text='Aanduiding van het format van het bestand.', max_length=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contactpersoon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contactpersoonnaam', models.CharField(max_length=40)),
                ('contactpersoon_functie', models.CharField(blank=True, max_length=50, null=True)),
                ('contactpersoon_telefoonnummer', models.CharField(blank=True, max_length=20, null=True)),
                ('contactpersoon_emailadres', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Eigenschap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Eigenschappen',
            },
        ),
        migrations.CreateModel(
            name='GebruiksRechten',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('einddatum_gebruiksrechten', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='Einddatum van de periode waarin de gebruiksrechtvoorwaarden van toepassing zijn', max_length=9, null=True)),
                ('omschrijving_voorwaarden', models.CharField(choices=[('Geen gebruiksrechten', 'Geen gebruiksrechten'), ('Hergebruik onder voorwaarden', 'Hergebruik onder voorwaarden'), ('Verbod op hergebruik', 'Verbod op hergebruik')], default='Geen gebruiksrechten', help_text='Omschrijving van de van toepassing zijndevoorwaarden aan het gebruik anders dan raadpleging', max_length=30)),
                ('startdatum_gebruiksrechten', zaakmagazijn.utils.fields.StUFDateField(help_text='Begindatum van de periode waarin de gebruiksrechtvoorwaarden van toepassing zijn', max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='GerelateerdeExterneZaak',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aanvraagdatum', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop verzocht is om de behandeling van de gerelateerde ZAAK uit te gaan voeren.', max_length=9)),
                ('aard_relatie', models.CharField(choices=[('Opdrachtgever', 'Opdrachtgever'), ('Opdrachtnemer', 'Opdrachtnemer')], help_text='Aanduiding van de rol van de gerelateerde zaak ten aanzien van de onderhanden ZAAK', max_length=15)),
                ('datum_status_gezet', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de gerelateerde ZAAK de laatst bekende status heeft verkregen.', max_length=9)),
                ('einddatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de uitvoering van de gerelateerde ZAAK afgerond is.', max_length=9, null=True)),
                ('startdatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop met de uitvoering van de gerelateerde ZAAK is gestart', max_length=9, null=True)),
                ('resultaatomschrijving', models.CharField(blank=True, help_text='Een korte omschrijving wat het resultaat van de gerelateerde ZAAK inhoudt.', max_length=80, null=True)),
                ('statusomschrijving_generiek', models.CharField(blank=True, help_text='Algemeen gehanteerde omschrijving van de aard van de laatst bekende status van de gerelateerde ZAAK.', max_length=80, null=True)),
                ('verantwoordelijke_organisatie', models.IntegerField(help_text='Het RSIN van de organisatie die verantwoordelijk is voor de behandeling van de gerelateerde ZAAK.')),
                ('zaakidentificatie', models.CharField(blank=True, help_text='De unieke identificatie van de gerelateerde ZAAK.', max_length=40, null=True)),
                ('zaaktypeomschrijving_generiek', models.CharField(help_text='Algemeen gehanteerde omschrijving van de aard van ZAAKen van het ZAAKTYPE waartoe de gerelateerde zaak behoort.', max_length=80)),
                ('zaaktypecode', models.SmallIntegerField(help_text='De algemeen gehanteerde code van de aard van ZAAKen van het ZAAKTYPE waartoe de gerelateerde zaak behoort')),
            ],
            options={
                'verbose_name_plural': 'Gerelateerde externe zaken',
            },
        ),
        migrations.CreateModel(
            name='InformatieObjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('informatieobjecttypeomschrijving', models.CharField(max_length=80)),
                ('domein', models.CharField(help_text='Een afkorting waarmee wordt aangegeven voor welk domein in de CATALOGUS ZAAKTYPEn zijn uitgewerkt.', max_length=5)),
                ('rsin', models.PositiveIntegerField(help_text='Het door een kamer toegekend uniek nummer voor de INGESCHREVEN NIET-NATUURLIJK PERSOON')),
                ('informatieobjectcategorie', models.CharField(max_length=80)),
                ('informatieobjecttypetrefwoord', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), blank=True, help_text='Een verzameling van trefwoorden waarmee ZAAKen van het ZAAKTYPE kunnen worden gekarakteriseerd.', null=True, size=None)),
                ('datum_begin_geldigheid_informatieobjecttype', zaakmagazijn.utils.fields.StUFDateField(max_length=9)),
                ('datum_einde_geldigheid_informatieobjecttype', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InformatieObjectTypeOmschrijvingGeneriek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('informatieobjecttypeomschrijving_generiek', models.CharField(help_text='Algemeen gehanteerde omschrijving van het type informatieobject.', max_length=80)),
                ('definitie_informatieobjecttypeomschrijving_generiek', models.TextField(help_text='Nauwkeurige beschrijving van het generieke type informatieobject', max_length=255)),
                ('herkomst_informatieobjecttypeomschrijving_generiek', models.CharField(help_text='De naam van de waardenverzameling, of van de beherende organisatie daarvan, waaruit de waarde is overgenomen.', max_length=12)),
                ('hierarchie_informatieobjecttypeomschrijving_generiek', models.CharField(help_text='De plaats in de rangorde van het informatieobjecttype.', max_length=80)),
                ('opmerking_informatieobjecttypeomschrijving_generiek', models.TextField(blank=True, help_text='Zinvolle toelichting bij het informatieobjecttype', max_length=255, null=True)),
                ('begin_geldigheid_informatieobjecttypeomschrijving_generiek', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de generieke omschrijving van toepassing is geworden.', max_length=9)),
                ('einde_geldigheid_informatieobjecttypeomschrijving_generiek', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de generieke omschrijving niet meer van toepassing is.', max_length=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Integriteit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algoritme', models.TextField(help_text='Aanduiding van algoritme, gebruikt om de checksum te maken.', max_length=1000)),
                ('waarde', models.TextField(help_text='De waarde van de checksum.', max_length=1000, validators=[zaakmagazijn.rgbz.validators.validate_continuous_numbers])),
                ('datum', zaakmagazijn.utils.fields.StUFDateField(help_text='Datum waarop de checksum is gemaakt.', max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Klantcontact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificatie', models.CharField(help_text='De unieke aanduiding van een KLANTCONTACT', max_length=14, unique=True)),
                ('datumtijd', zaakmagazijn.utils.fields.StUFDateTimeField(help_text='De datum en het tijdstip waarop het KLANTCONTACT begint', max_length=18)),
                ('kanaal', models.CharField(blank=True, help_text='Het communicatiekanaal waarlangs het KLANTCONTACT gevoerd wordt', max_length=20, null=True)),
                ('onderwerp', models.CharField(help_text='De kern van datgene waar het KLANTCONTACT over gaat.', max_length=80)),
                ('toelichting', models.TextField(blank=True, help_text='Samenvattende beschrijving van de relevante kenmerken van het gevoerde KLANTCONTACT', max_length=1000, null=True)),
            ],
            options={
                'verbose_name_plural': 'Klantcontacten',
            },
        ),
        migrations.CreateModel(
            name='KlantContactpersoon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contactpersoon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Contactpersoon')),
                ('klantcontact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Klantcontact', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Naam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voornamen', models.CharField(help_text='Voornamen bij de naam die de persoon wenst te voeren.', max_length=200)),
                ('geslachtsnaam', models.CharField(help_text='De stam van de geslachtsnaam.', max_length=200)),
                ('adelijke_titel', models.CharField(choices=[('B', 'Baron'), ('B', 'Barones'), ('G', 'Graaf'), ('G', 'Gravin'), ('H', 'Hertog'), ('H', 'Hertogin'), ('M', 'Markies'), ('M', 'Markiezin'), ('P', 'Prins'), ('P', 'Prinses'), ('R', 'Ridder')], max_length=1)),
                ('voorvoegsel_geslachtsnaam', models.ForeignKey(blank=True, help_text='Voorvoegsel bij de naam die de persoon wenst te voeren.', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Voorvoegsel')),
            ],
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificatie', models.CharField(help_text='De unieke identificatie van het OBJECT', max_length=50)),
                ('_objecttype_model', models.CharField(blank=True, max_length=50, null=True)),
                ('objecttype', models.CharField(default='???', max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ondertekening',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ondertekeningsoort', models.CharField(help_text='Aanduiding van de wijze van ondertekening van het INFORMATIEOBJECT', max_length=10)),
                ('ondertekeningdatum', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de ondertekening van het INFORMATIEOBJECT heeft plaatsgevonden', max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Rekeningnummer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iban', models.CharField(help_text='Het internationaal bankrekeningnummer, zoals dat door een bankinstelling als identificator aan een overeenkomst tussen de bank en een of meer subjecten wordt toegekend, op basis waarvan het SUBJECT in de regel internationaal financieel communiceert.', max_length=34)),
                ('bic', models.CharField(help_text='De unieke code van de bankinstelling waar het SUBJECT het bankrekeningnummer heeft waarmee het subject in de regel internationaal financieel communiceert', max_length=11)),
            ],
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rolomschrijving', models.CharField(choices=[('Adviseur', 'Adviseur'), ('Behandelaar', 'Behandelaar'), ('Belanghebbende', 'Belanghebbende'), ('Beslisser', 'Beslisser'), ('initiator', 'initiator'), ('Klantcontacter', 'Klantcontacter'), ('Zaakcoordinator', 'Zaakcoordinator')], help_text='Algemeen gehanteerde benaming van de aard van de ROL', max_length=80)),
                ('rolomschrijving_generiek', models.CharField(choices=[('Adviseur', 'Adviseur'), ('Behandelaar', 'Behandelaar'), ('Belanghebbende', 'Belanghebbende'), ('Beslisser', 'Beslisser'), ('initiator', 'initiator'), ('Klantcontacter', 'Klantcontacter'), ('Zaakcoordinator', 'Zaakcoordinator'), ('Mede-initiator', 'Mede-initiator')], help_text='Algemeen gehanteerde benaming van de aard van de ROL', max_length=40)),
                ('roltoelichting', models.TextField(max_length=1000)),
                ('indicatie_machtiging', models.CharField(blank=True, choices=[('Gemachtigde', 'Gemachtigde'), ('Machtiginggever', 'Machtiginggever')], help_text='Indicatie of de BETROKKENE in de ROL bij de ZAAK optreedt als gemachtigde van een andere BETROKKENE bij die ZAAK', max_length=15, null=True)),
                ('afwijkend_binnenlands_correspondentieadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.AdresMetPostcode')),
                ('afwijkend_buitenlands_correspondentieadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.VerblijfBuitenland')),
                ('afwijkend_correspondentie_postadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.PostAdres')),
                ('contactpersoon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rgbz.Contactpersoon')),
            ],
        ),
        migrations.CreateModel(
            name='StatusType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statustypeomschrijving', models.CharField(help_text='Een korte, voor de initiator van de zaak relevante, omschrijving van de aard van de STATUS van zaken van een ZAAKTYPE.', max_length=80)),
                ('statustypevolgnummer', models.PositiveSmallIntegerField(help_text='Een volgnummer voor statussen van het STATUSTYPE binnen een zaak.', validators=[django.core.validators.MaxValueValidator(9999)])),
                ('doorlooptijd_status', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999)])),
                ('statustypeomschrijving_generiek', models.CharField(blank=True, help_text='Algemeen gehanteerde omschrijving van de aard van STATUSsen van het STATUSTYPE', max_length=80, null=True)),
                ('datum_begin_geldigheid_statustype', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop het STATUSTYPE is ontstaan.', max_length=9)),
                ('datum_einde_geldigheid_statustype', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het STATUSTYPE is opgeheven.', max_length=9, null=True)),
            ],
            options={
                'verbose_name_plural': 'Status types',
            },
        ),
        migrations.CreateModel(
            name='Verzending',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aard_relatie', models.CharField(choices=[('Afzender', 'Afzender'), ('Geadresseerde', 'Geadresseerde')], help_text='Omschrijving van de aard van de relatie van de BETROKKENE tot het INFORMATIEOBJECT', max_length=13)),
                ('toelichting', models.CharField(blank=True, help_text='Verduidelijking van de afzender- of geadresseerde-relatie.', max_length=200, null=True)),
                ('contactpersoonnaam', models.CharField(blank=True, help_text='De opgemaakte naam van de persoon die als aanspreekpunt fungeert voor de BETROKKENE inzake het ontvangen of verzonden INFORMATIEOBJECT.', max_length=40, null=True)),
                ('afwijkend_binnenlands_correspondentieadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.AdresMetPostcode')),
                ('afwijkend_buitenlands_correspondentieadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.VerblijfBuitenland')),
                ('afwijkend_correspondentie_postadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.PostAdres')),
            ],
        ),
        migrations.CreateModel(
            name='Zaak',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zaakidentificatie', models.CharField(help_text='De unieke identificatie van de ZAAK binnen de organisatie die verantwoordelijk is voor de behandeling van de ZAAK.', max_length=40, unique=True, validators=[zaakmagazijn.rgbz.validators.AlphanumericExcludingDiacritic()])),
                ('bronorganisatie', models.PositiveIntegerField(help_text='Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die de zaak heeft gecreeerd.')),
                ('omschrijving', models.CharField(blank=True, help_text='Een korte omschrijving van de zaak.', max_length=80, null=True)),
                ('toelichting', models.TextField(blank=True, help_text='Een toelichting op de zaak.', max_length=1000, null=True)),
                ('registratiedatum', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de zaakbehandelende organisatie de ZAAK heeft geregistreerd', max_length=9)),
                ('verantwoordelijke_organisatie', models.PositiveIntegerField(help_text='Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die eindverantwoordelijk is voor de behandeling van de zaak.')),
                ('einddatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop volgens de planning verwacht wordt dat de zaak afgerond wordt.', max_length=9, null=True)),
                ('startdatum', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop met de uitvoering van de zaak is gestart', max_length=9)),
                ('einddatum_gepland', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop volgens de planning verwacht wordt dat de zaak afgerond wordt.', max_length=9, null=True)),
                ('uiterlijke_einddatum_afdoening', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De laatste datum waarop volgens wet- en regelgeving de zaak afgerond dient te zijn.', max_length=9, null=True)),
                ('resultaatomschrijving', models.CharField(blank=True, help_text='Een korte omschrijving wat het resultaat van de zaak inhoudt.', max_length=80, null=True)),
                ('resultaattoelichting', models.TextField(blank=True, help_text='Een toelichting op wat het resultaat van de zaak inhoudt.', max_length=1000, null=True)),
                ('publicatiedatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='Datum waarop (het starten van) de zaak gepubliceerd is of wordt.', max_length=9, null=True)),
                ('archiefnominatie', models.CharField(blank=True, choices=[('Vernietigen', 'Vernietigen'), ('Blijvend bewaren', 'Blijvend bewaren')], help_text='Aanduiding of het zaakdossier blijvend bewaard of na een bepaalde termijn vernietigd moet worden.', max_length=16, null=True)),
                ('archiefstatus', models.CharField(choices=[('Nog te archivren', 'Nog te archivren'), ('Gearchiveerd', 'Gearchiveerd'), ('Vernietigd', 'Vernietigd'), ('overgedragen', 'overgedragen')], help_text='De fase waarin het zaakdossier zich qua archivering bevindt', max_length=20)),
                ('archiefactiedatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het gearchiveerde zaakdossier vernietigd moet worden dan wel overgebracht moet worden naar een archiefbewaarplaats.', max_length=9, null=True)),
                ('betalingsindicatie', models.CharField(blank=True, help_text='Indicatie of de, met behandeling van de zaak gemoeide, kosten betaald zijn door de desbetreffende betrokkene.', max_length=12, null=True)),
                ('laatste_betaaldatum', zaakmagazijn.utils.fields.StUFDateTimeField(blank=True, help_text='De datum waarop de meest recente betaling is verwerkt van kosten die gemoeid zijn met behandeling van de zaak.', max_length=18)),
                ('zaakgeometrie', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Zaken',
            },
        ),
        migrations.CreateModel(
            name='ZaakInformatieObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(help_text='De naam waaronder het INFORMATIEOBJECT binnen de ZAAK bekend is.', max_length=200)),
                ('beschrijving', models.TextField(blank=True, help_text='Een op de zaak gerichte beschrijving van de inhoud van het INFORMATIEOBJECT.', max_length=1000, null=True)),
                ('registratiedatum', zaakmagazijn.utils.fields.StUFDateField(max_length=9, verbose_name='De datum waarop de zaakbehandelende organisatie het INFORMATIEOBJECT heeft geregistreerd bij de ZAAK.')),
                ('zaak', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Zaak')),
            ],
            options={
                'verbose_name_plural': 'ZaakInformatieObjecten',
            },
        ),
        migrations.CreateModel(
            name='ZaakKenmerk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kenmerk', models.CharField(help_text='Identificeert uniek de zaak in een andere administratie.', max_length=40)),
                ('kenmerk_bron', models.CharField(help_text='De aanduiding van de administratie waar het kenmerk op slaat.', max_length=40)),
                ('zaak', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Zaak')),
            ],
            options={
                'verbose_name_plural': 'Zaak kenmerken',
            },
        ),
        migrations.CreateModel(
            name='ZaakObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relatieomschrijving', models.CharField(blank=True, help_text='Omschrijving van de betrekking tussen deZAAK en het OBJECT', max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ZaakOpschorting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicatie_opschorting', models.CharField(choices=[('J', 'Ja'), ('N', 'Nee')], help_text='Aanduiding of de behandeling van de ZAAK tijdelijk is opgeschort.', max_length=1)),
                ('reden_opschorting', models.CharField(blank=True, help_text='Omschrijving van de reden voor het opschorten van de behandeling van de zaak.', max_length=200, null=True)),
                ('zaak', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Zaak')),
            ],
            options={
                'verbose_name_plural': 'Zaak opschortingen',
            },
        ),
        migrations.CreateModel(
            name='ZaakType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zaaktypeidentificatie', models.PositiveIntegerField(help_text='Unieke identificatie van het ZAAKTYPE binnen de CATALOGUS waarin het ZAAKTYPE voorkomt.', unique=True, validators=[django.core.validators.MaxValueValidator(99999)])),
                ('zaaktypeomschrijving', models.CharField(help_text='Omschrijving van de aard van ZAAKen van het ZAAKTYPE.', max_length=80)),
                ('domein', models.CharField(help_text='Een afkorting waarmee wordt aangegeven voor welk domein in de CATALOGUS ZAAKTYPEn zijn uitgewerkt.', max_length=5)),
                ('zaaktypeomschrijving_generiek', models.CharField(blank=True, help_text='Algemeen gehanteerde omschrijving van de aard van ZAAKen van het ZAAKTYPE', max_length=80, null=True)),
                ('rsin', models.PositiveIntegerField(help_text='Het door een kamer toegekend uniek nummer voor de INGESCHREVEN NIET-NATUURLIJK PERSOON')),
                ('trefwoord', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), blank=True, help_text='Een verzameling van trefwoorden waarmee ZAAKen van het ZAAKTYPE kunnen worden gekarakteriseerd.', null=True, size=None)),
                ('doorlooptijd_behandeling', models.PositiveSmallIntegerField(help_text='De periode waarbinnen volgens wet- en regelgeving een ZAAK van het ZAAKTYPE afgerond dient te zijn.', validators=[django.core.validators.MaxValueValidator(999)])),
                ('servicenorm_behandeling', models.PositiveSmallIntegerField(blank=True, help_text='De periode waarbinnen verwacht wordt dat een ZAAK van het ZAAKTYPE afgerond wordt conform de geldende servicenormen van de zaakbehandelende organisatie(s)', null=True, validators=[django.core.validators.MaxValueValidator(999)])),
                ('archiefclassificatiecode', models.CharField(blank=True, help_text='De systematische identificatie van zaakdossiers van dit ZAAKTYPE overeenkomstig logisch gestructureerde conventies, methoden en procedureregels.', max_length=20, null=True)),
                ('vertrouwelijk_aanduiding', models.CharField(choices=[('ZEER GEHEIM', 'ZEER GEHEIM'), ('GEHEIM', 'GEHEIM'), ('CONFIDENTIEEL', 'CONFIDENTIEEL'), ('VERTROUWELIJK', 'VERTROUWELIJK'), ('ZAAKVERTROUWELIJK', 'ZAAKVERTROUWELIJK'), ('INTERN', 'INTERN'), ('BEPERKTOPENBAAR', 'BEPERKTOPENBAAR'), ('OPENBAAR', 'OPENBAAR')], help_text='Aanduiding van de mate waarin zaakdossiers van ZAAKen van dit ZAAKTYPE voor de openbaarheid bestemd zijn.', max_length=20)),
                ('publicatie_indicatie', models.CharField(choices=[('J', 'Ja'), ('N', 'Nee')], help_text='Aanduiding of (het starten van) een ZAAK van dit ZAAKTYPE gepubliceerd moet worden.', max_length=1)),
                ('zaakcategorie', models.CharField(blank=True, help_text='Typering van de aard van ZAAKen van het ZAAKTYPE.', max_length=40, null=True)),
                ('publicatietekst', models.TextField(blank=True, help_text='De generieke tekst van de publicatie van ZAAKen van dit ZAAKTYPE.', max_length=1000, null=True)),
                ('datum_begin_geldigheid_zaaktype', zaakmagazijn.utils.fields.StUFDateField(help_text='Datum begin geldigheid zaaktype', max_length=9)),
                ('datum_einde_geldigheid_zaaktype', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het ZAAKTYPE is opgeheven', max_length=9)),
            ],
            options={
                'verbose_name_plural': 'Zaak types',
            },
        ),
        migrations.CreateModel(
            name='ZaakVerlenging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reden_verlenging', models.CharField(help_text='Omschrijving van de reden voor het verlengen van de behandeling van de zaak.', max_length=200)),
                ('duur_verlenging', models.SmallIntegerField(help_text='Het aantal werkbare dagen waarmee de doorlooptijd van de behandeling van de ZAAK is verlengd (of verkort) ten opzichte van de eerder gecommuniceerde doorlooptijd.', validators=[django.core.validators.MaxValueValidator(999)])),
                ('zaak', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Zaak')),
            ],
            options={
                'verbose_name_plural': 'Zaak verlengingen',
            },
        ),
        migrations.CreateModel(
            name='ZakenRelatie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aard_relatie', models.CharField(choices=[('Vervolg', 'Vervolg'), ('Onderwerp', 'Onderwerp'), ('Bijdrage', 'Bijdrage')], max_length=10)),
                ('andere_zaak', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='andere_zaak', to='rgbz.Zaak')),
                ('onderhanden_zaak', models.ForeignKey(help_text='Zaak waar de zaak relevant voor is', on_delete=django.db.models.deletion.CASCADE, to='rgbz.Zaak')),
            ],
        ),
        migrations.CreateModel(
            name='AnderBuitenlandsNietNatuurlijkPersoonObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('statutaire_naam', models.TextField(blank=True, help_text='Naam van de niet-natuurlijke persoon zoals deze is vastgelegd in de statuten (rechtspersoon) of in de vennootschapsovereenkomst is overeengekomen (Vennootschap onder firma of Commanditaire vennootschap).', max_length=500, null=True)),
                ('datum_aanvang', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum van aanvang van de NIET-NATUURLIJK PERSOON', max_length=9)),
                ('datum_beeindiging', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum van beëindiging van de NIET-NATUURLIJK PERSOON.', max_length=9, null=True)),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('nummer_ander_buitenlands_nietnatuurlijk_persoon', models.CharField(help_text='Het door de gemeente uitgegeven uniekenummer voor een ANDER NIET-NATUURLIJK PERSOON', max_length=17)),
                ('verkorte_naam', models.CharField(blank=True, help_text='De administratieve naam in het handelsregister indien de (statutaire) naam langer is dan 45 karakters', max_length=45, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
                ('verblijf_buitenland', models.ForeignKey(blank=True, help_text='De gegevens over het verblijf in het buitenland', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.VerblijfBuitenland')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='AnderNatuurlijkPersoonObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('geslachtsaanduiding', models.CharField(choices=[('M', 'Man'), ('V', 'Vrouw'), ('O', 'Onbekend')], help_text='Een aanduiding die aangeeft of de persoon een man of een vrouw is, of dat het geslacht nog onbekend is.', max_length=1)),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('nummer_ander_natuurlijk_persoon', models.CharField(help_text='Het door de gemeente uitgegeven unieke nummer voor een ANDER NATUURLIJK PERSOON', max_length=17)),
                ('geboortedatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de ander natuurlijk persoon is geboren.', max_length=9, null=True)),
                ('overlijdensdatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum van overlijden van een ANDER NATUURLIJK PERSOON', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('correspondentieadres', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.Correspondentieadres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
                ('naamaanschrijving', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.NaamAanschrijving')),
                ('verblijf_buitenland', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.VerblijfBuitenland')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='AppartementsRechtObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('datum_begin_geldigheid_kadastrale_onroerende_zaak', zaakmagazijn.utils.fields.StUFDateField(max_length=9)),
                ('datum_einde_geldigheid_kadastrale_onroerende_zaak', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
                ('kadastrale_identificatie', models.ForeignKey(help_text='De unieke aanduiding van een onroerende zaak, die door het kadaster wordt vastgesteld.', on_delete=django.db.models.deletion.CASCADE, to='rsgb.CompositeID')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='Besluit',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('besluitdatum', zaakmagazijn.utils.fields.StUFDateField(help_text='De beslisdatum (AWB) van het besluit', max_length=9)),
                ('besluittoelichting', models.TextField(blank=True, help_text='Toelichting bij het besluit.', max_length=1000, null=True)),
                ('bestuursorgaan', models.CharField(blank=True, help_text='Een orgaan van een rechtspersoon krachtens publiekrecht ingesteld of een persoon of college, met enig openbaar gezag bekleed onder wiens verantwoordelijkheid het besluit vastgesteld is.', max_length=50, null=True)),
                ('ingangsdatum', zaakmagazijn.utils.fields.StUFDateField(help_text='Ingangsdatum van de werkingsperiode van het besluit.', max_length=9)),
                ('vervaldatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='Datum waarop de werkingsperiode van het besluit eindigt.', max_length=9, null=True)),
                ('vervalreden', models.CharField(blank=True, choices=[('Besluit met tijdelijke werking', 'Besluit met tijdelijke werking'), ('Besluit ingetrokken door overheid', 'Besluit ingetrokken door overheid'), ('Besluit ingetrokken o.v.v belanghebbende', 'Besluit ingetrokken o.v.v belanghebbende')], help_text='De omschrijving die aangeeft op grond waarvan het besluit is of komt te vervallen.', max_length=40, null=True)),
                ('publicatiedatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='Datum waarop het besluit gepubliceerd wordt.', max_length=9, null=True)),
                ('verzenddatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='Datum waarop het besluit verzonden is', max_length=9, null=True)),
                ('uiterlijke_reactiedatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum tot wanneer verweer tegen het besluit mogelijk is.', max_length=9, null=True)),
                ('besluittype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.BesluitType')),
            ],
            options={
                'verbose_name_plural': 'Besluiten',
            },
            bases=('rgbz.object',),
        ),
        migrations.CreateModel(
            name='Betrokkene',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('_betrokkenetype_model', models.CharField(blank=True, max_length=50, null=True)),
                ('betrokkenetype', models.CharField(default='???', max_length=3)),
            ],
            bases=('rgbz.object',),
        ),
        migrations.CreateModel(
            name='BuurtObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('buurtcode', models.CharField(help_text='De code behorende bij de naam van de buurt', max_length=2)),
                ('buurtnaam', models.CharField(help_text='De naam van de buurt, zoals die door het CBS wordt gebruikt.', max_length=40)),
                ('datum_begin_geldigheid_buurt', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de buurt is gecreëerd.', max_length=9)),
                ('datum_einde_geldigheid_buurt', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop een buurt is komen te vervallen.', max_length=9)),
                ('wijkcode', models.CharField(help_text='De code behorende bij de naam van de wijk', max_length=2)),
                ('gemeentecode', models.CharField(help_text='Een numerieke aanduiding waarmee een Nederlandse gemeente uniek wordt aangeduid', max_length=4)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='GemeentelijkeOpenbareRuimteObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('gemeentecode', models.CharField(help_text='Een numerieke aanduiding waarmee een Nederlandse gemeente uniek wordt aangeduid', max_length=4)),
                ('naam_openbare_ruimte', models.CharField(help_text='Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming', max_length=80)),
                ('type_openbare_ruimte', models.CharField(choices=[('weg', 'weg'), ('water', 'water'), ('spoorbaan', 'spoorbaan'), ('terrein', 'terrein'), ('kunstwerk', 'kunstwerk'), ('landschappelijk gebied', 'landschappelijk gebied'), ('functioneel gebied', 'functioneel gebied'), ('administratief gebied', 'administratief gebied')], help_text='De aard van de als zodanig benoemde OPENBARERUIMTE.', max_length=36)),
                ('datum_begin_geldigheid_gemeentelijke_openbare_ruimte', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de OPENBARE RUIMTE formeel is benoemd.', max_length=9)),
                ('datum_einde_geldigheid_gemeentelijke_openbare_ruimte', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop formeel is besloten de OPENBARE RUIMTE niet langer te laten', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='GemeenteObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('gemeentenaam', models.CharField(help_text='De officiële door de gemeente vastgestelde gemeentenaam.', max_length=80)),
                ('datum_begin_geldigheid_gemeente', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de gemeente is ontstaan', max_length=9)),
                ('datum_einde_geldigheid_gemeente', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de gemeente is opgeheven.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='HuishoudenObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('woonplaatsnaam', models.CharField(max_length=80)),
                ('naam_openbare_ruimte', models.CharField(help_text='Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming', max_length=80)),
                ('huisletter', models.CharField(blank=True, max_length=1, null=True)),
                ('huisnummer', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999)])),
                ('huisnummertoevoeging', models.CharField(blank=True, max_length=4, null=True)),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('huishoudennummer', models.CharField(help_text='Uniek identificerend administratienummer van een huishouden zoals toegekend door de gemeente waarin het huishouden woonachtig is.', max_length=12)),
                ('huishoudensoort', models.CharField(choices=[('1', 'institutioneel huishouden'), ('2', 'alleenstaand (inclusief andere personen die in hetzelfde object wonen, maar een eigen huishouding voeren)'), ('3', '2 personen, vaste partners, geen thuiswonende kinderen'), ('4', '2 personen, vaste partners, een of meer thuiswonende kinderen'), ('5', 'eenoudergezin, ouder met een of meer thuiswonende kinderen'), ('6', 'overig particulier huishouden (samenwoning van personen die geen partnerrelatie onderhouden of een ouder-kindrelatie hebben, maar wel gezamenlijk een huishouding voeren)')], help_text='Typering van het huishouden naar grootte en verbondenheid.', max_length=2)),
                ('datum_begin_geldigheid_huishouden', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop het HUISHOUDEN is ontstaan.', max_length=9)),
                ('datum_einde_geldigheid_huishouden', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het HUISHOUDEN is komen te vervallen.', max_length=9, null=True)),
                ('postcode', models.CharField(blank=True, max_length=7, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='InformatieObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('informatieobjectidentificatie', models.CharField(help_text='Een binnen een gegeven context ondubbelzinnige referentie naar het INFORMATIEOBJECT.', max_length=40, validators=[zaakmagazijn.rgbz.validators.AlphanumericExcludingDiacritic()])),
                ('bronorganisatie', models.IntegerField(blank=True, help_text='Het RSIN van de Niet-natuurlijk persoon zijnde de organisatie die het informatieobject heeft gecreëerd of heeft ontvangen en als eerste in een samenwerkingsketen heeft vastgelegd.', null=True)),
                ('creatiedatum', zaakmagazijn.utils.fields.StUFDateField(help_text='Een datum of een gebeurtenis in de levenscyclus van het INFORMATIEOBJECT.', max_length=9)),
                ('ontvangstdatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het INFORMATIEOBJECT ontvangen is.', max_length=9, null=True)),
                ('afzender', models.CharField(blank=True, help_text='De persoon of organisatie waarvan het informatieobject is ontvangen.', max_length=200, null=True)),
                ('titel', models.CharField(help_text='De naam waaronder het INFORMATIEOBJECT formeel bekend is.', max_length=200)),
                ('beschrijving', models.TextField(blank=True, help_text='Een generieke beschrijving van de inhoud van het INFORMATIEOBJECT.', max_length=1000, null=True)),
                ('versie', models.CharField(blank=True, help_text='Aanduiding van de bewerkingsfase van het INFORMATIEOBJECT', max_length=5, null=True)),
                ('informatieobject_status', models.CharField(blank=True, help_text='Aanduiding van de stand van zaken van een INFORMATIEOBJECT', max_length=20, null=True)),
                ('verzenddatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9, null=True)),
                ('geadresseerde', models.CharField(blank=True, help_text='De persoon of organisatie waarnaar het informatieobject is verzonden.', max_length=200, null=True)),
                ('vertrouwlijkaanduiding', models.CharField(choices=[('ZEER GEHEIM', 'ZEER GEHEIM'), ('GEHEIM', 'GEHEIM'), ('CONFIDENTIEEL', 'CONFIDENTIEEL'), ('VERTROUWELIJK', 'VERTROUWELIJK'), ('ZAAKVERTROUWELIJK', 'ZAAKVERTROUWELIJK'), ('INTERN', 'INTERN'), ('BEPERKTOPENBAAR', 'BEPERKTOPENBAAR'), ('OPENBAAR', 'OPENBAAR')], help_text='Aanduiding van de mate waarin het INFORMATIEOBJECT voor de openbaarheid bestemd is.', max_length=20)),
                ('archiefnominatie', models.CharField(blank=True, choices=[('Vernietigen', 'Vernietigen'), ('Blijvend bewaren', 'Blijvend bewaren'), ('Conform zaak', 'Conform zaak')], help_text='Aanduiding of het INFORMATIEOBJECT blijvend bewaard of na een bepaalde termijn vernietigd moet worden.', max_length=16, null=True)),
                ('archiefactiedatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het gearchiveerde INFORMATIEOBJECT vernietigd moet worden dan wel overgebracht moet worden naar een archiefbewaarplaats.', max_length=9, null=True)),
                ('auteur', models.CharField(help_text='De persoon of organisatie die in de eerste plaats verantwoordelijk is voor het creëren van de inhoud van het INFORMATIEOBJECT.', max_length=200)),
                ('verschijningsvorm', models.TextField(blank=True, help_text='De essentiële opmaakaspecten van een INFORMATIEOBJECT.', null=True)),
                ('_informatieobjecttype_model', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Informatie objecten',
            },
            bases=('rgbz.object',),
        ),
        migrations.CreateModel(
            name='IngeschrevenNietNatuurlijkPersoonObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('rsin', models.PositiveIntegerField(help_text='Het door een kamer toegekend uniek nummer voor de INGESCHREVEN NIET-NATUURLIJK PERSOON')),
                ('statutaire_naam', models.TextField(blank=True, help_text='Naam van de niet-natuurlijke persoon zoals deze is vastgelegd in de statuten (rechtspersoon) of in de vennootschapsovereenkomst is overeengekomen (Vennootschap onder firma of Commanditaire vennootschap).', max_length=500, null=True)),
                ('datum_aanvang', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum van aanvang van de NIET-NATUURLIJK PERSOON', max_length=9)),
                ('datum_beeindiging', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum van beëindiging van de NIET-NATUURLIJK PERSOON.', max_length=9, null=True)),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('rechtsvorm', models.CharField(blank=True, choices=[('Besloten Vennootschap', 'Besloten Vennootschap'), ('Cooperatie, Europees Economische Samenwerking', 'Cooperatie, Europees Economische Samenwerking'), ('Europese Cooperatieve Venootschap', 'Europese Cooperatieve Venootschap'), ('Europese Naamloze Vennootschap', 'Europese Naamloze Vennootschap'), ('Kerkelijke Organisatie', 'Kerkelijke Organisatie'), ('Naamloze Vennootschap', 'Naamloze Vennootschap'), ('Onderlinge Waarborg Maatschappij', 'Onderlinge Waarborg Maatschappij'), ('Overig privaatrechtelijke rechtspersoon', 'Overig privaatrechtelijke rechtspersoon'), ('Stichting', 'Stichting'), ('Vereniging', 'Vereniging'), ('Vereniging van Eigenaars', 'Vereniging van Eigenaars'), ('Publiekrechtelijke Rechtspersoon', 'Publiekrechtelijke Rechtspersoon'), ('Vennootschap onder Firma', 'Vennootschap onder Firma'), ('Maatschap', 'Maatschap'), ('Rederij', 'Rederij'), ('Commanditaire vennootschap', 'Commanditaire vennootschap'), ('Kapitaalvennootschap binnen EER', 'Kapitaalvennootschap binnen EER'), ('Overige buitenlandse rechtspersoon vennootschap', 'Overige buitenlandse rechtspersoon vennootschap'), ('Kapitaalvennootschap buiten EER', 'Kapitaalvennootschap buiten EER')], help_text='De juridische vorm van de INGESCHREVEN NIET-NATUURLIJK PERSOON.', max_length=30, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('bezoekadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bezoekadres', to='rsgb.Bezoekadres')),
                ('correspondentieadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.Correspondentieadres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
                ('postadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postadres', to='rsgb.PostAdres')),
                ('verblijf_buitenland', models.ForeignKey(blank=True, help_text='De gegevens over het verblijf in het buitenland', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.VerblijfBuitenland')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='IngezeteneObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('burgerservicenummer', models.PositiveIntegerField(help_text='Het burgerservicenummer, bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.')),
                ('geslachtsaanduiding', models.CharField(choices=[('M', 'Man'), ('V', 'Vrouw'), ('O', 'Onbekend')], help_text='Een aanduiding die aangeeft of de persoon een man of een vrouw is, of dat het geslacht nog onbekend is.', max_length=1)),
                ('geboortedatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de ander natuurlijk persoon is geboren.', max_length=9, null=True)),
                ('overlijdensdatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum van overlijden van een ANDER NATUURLIJK PERSOON', max_length=9, null=True)),
                ('correspondentieadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.Correspondentieadres')),
                ('naamaanschrijving', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.NaamAanschrijving')),
                ('postadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.PostAdres')),
                ('verblijf_buitenland', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.VerblijfBuitenland')),
                ('verblijfadres', models.ForeignKey(blank=True, help_text='De gegevens over het verblijf en adres van de INGESCHREVEN NATUURLIJK PERSOON', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ingezeteneobject_verblijfadres', to='rsgb.VerblijfAdres')),
            ],
            options={
                'abstract': False,
            },
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='InrichtingsElementObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('inrichtingselementtype', models.CharField(choices=[('Bak', 'Bak'), ('Bord', 'Bord'), ('Installatie', 'Installatie'), ('Kast', 'Kast'), ('Mast', 'Mast'), ('Paal', 'Paal'), ('Sensor', 'Sensor'), ('Straatmeubilair', 'Straatmeubilair'), ('Waterinrichtingselement', 'Waterinrichtingselement'), ('Weginrichtingselement', 'Weginrichtingselement')], help_text='Specificatie van de aard van het inrichtingselement.', max_length=30)),
                ('datum_begin_geldigheid_inrichtingselement', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop het inrichtingselement is ontstaan.', max_length=9)),
                ('datum_einde_geldigheid_inrichtingselement', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het inrichtingselement ongeldig is geworden.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='KadastraalPerceelObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('begrenzing_perceel', models.TextField(blank=True, help_text='Het geheel van lijnketens waarmee de vlakomtrek van een perceel wordt gevormd.', null=True)),
                ('datum_begin_geldigheid_kadastrale_onroerende_zaak', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de gegevens van de kadastrale onroerende zaak voor het eerst geldig zijn geworden.', max_length=9)),
                ('datum_einde_geldigheid_kadastrale_onroerende_zaak', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de gegevens van de kadastrale onroerende zaak voor het laatstgeldig zijn geweest.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='KunstwerkDeelObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('type_kunstwerk', models.CharField(help_text='Specificatie van het soort Kunstwerk waartoe het kunstwerkdeel behoort.', max_length=40)),
                ('naam_kunstwerkdeel', models.CharField(max_length=80)),
                ('datum_begin_geldigheid_kunstwerkdeel', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop het kunstwerkdeel is ontstaan.', max_length=9)),
                ('datum_einde_geldigheid_kunstwerkdeel', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het kunstwerkdeel ongeldig is geworden.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='LigplaatsObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('datum_begin_geldigheid_benoemd_terrein', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop van gemeentewege het benoemd terrein formeel is aangewezen.', max_length=9)),
                ('datum_einde_geldigheid_benoemd_terrein', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop van gemeentewege het benoemd terrein formeel is ingetrokken.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('hoofdadres', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.AdresMetPostcode')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='MaatschappelijkeActiviteitObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('kvknummer', models.CharField(help_text='Landelijk uniek identificerend administratienummer van een MAATSCHAPPELIJKE ACTIVITEIT zoals toegewezen door de Kamer van Koophandel (KvK).', max_length=8)),
                ('datum_aanvang', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum van aanvang van de MAATSCHAPPELIJKE ACTIVITEIT', max_length=9)),
                ('datum_beeindiging', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum van beëindiging van de MAATSCHAPPELIJKE ACTIVITEIT', max_length=9, null=True)),
                ('eerste_handelsnaam', models.CharField(help_text='De naam waaronder de onderneming handelt.', max_length=200)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='NietIngezeteneObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('burgerservicenummer', models.PositiveIntegerField(help_text='Het burgerservicenummer, bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.')),
                ('geslachtsaanduiding', models.CharField(choices=[('M', 'Man'), ('V', 'Vrouw'), ('O', 'Onbekend')], help_text='Een aanduiding die aangeeft of de persoon een man of een vrouw is, of dat het geslacht nog onbekend is.', max_length=1)),
                ('geboortedatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de ander natuurlijk persoon is geboren.', max_length=9, null=True)),
                ('overlijdensdatum', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum van overlijden van een ANDER NATUURLIJK PERSOON', max_length=9, null=True)),
                ('correspondentieadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.Correspondentieadres')),
                ('naamaanschrijving', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.NaamAanschrijving')),
                ('postadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.PostAdres')),
                ('verblijf_buitenland', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.VerblijfBuitenland')),
                ('verblijfadres', models.ForeignKey(blank=True, help_text='De gegevens over het verblijf en adres van de INGESCHREVEN NATUURLIJK PERSOON', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nietingezeteneobject_verblijfadres', to='rsgb.VerblijfAdres')),
            ],
            options={
                'abstract': False,
            },
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='NummerAanduidingObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('woonplaatsnaam', models.CharField(max_length=80)),
                ('naam_openbare_ruimte', models.CharField(help_text='Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming', max_length=80)),
                ('huisletter', models.CharField(blank=True, max_length=1, null=True)),
                ('huisnummer', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999)])),
                ('huisnummertoevoeging', models.CharField(blank=True, max_length=4, null=True)),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('indicatie_hoofdadres', models.CharField(choices=[('J', 'Ja'), ('N', 'Nee')], help_text='Indicatie of de NUMMERAANDUIDING een hoofdadres is van het gerelateerde VERBLIJFSOBJECT, STANDPLAATS of LIGPLAATS', max_length=1)),
                ('postcode', models.CharField(blank=True, max_length=7, null=True)),
                ('datum_begin_geldigheid_adresseerbaar_object_aanduiding', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de ADRESSEERBAAR OBJECT AANDUIDING formeel is vastgesteld.', max_length=9)),
                ('datum_einde_geldigheid_adresseerbaar_object_aanduiding', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de ADRESSEERBAAR OBJECT AANDUIDING formeel is ingetrokken.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('identificatiecode_adresseerbaar_object_aanduiding', models.ForeignKey(help_text='De unieke aanduiding van een ADRESSEERBAAR OBJECT AANDUIDING', on_delete=django.db.models.deletion.CASCADE, to='rsgb.BAGObjectnummering')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='OpenbareRuimteObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('naam_openbare_ruimte', models.CharField(help_text='Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming', max_length=80)),
                ('type_openbare_ruimte', models.CharField(choices=[('weg', 'weg'), ('water', 'water'), ('spoorbaan', 'spoorbaan'), ('terrein', 'terrein'), ('kunstwerk', 'kunstwerk'), ('landschappelijk gebied', 'landschappelijk gebied'), ('functioneel gebied', 'functioneel gebied'), ('administratief gebied', 'administratief gebied')], help_text='De aard van de als zodanig benoemde OPENBARERUIMTE.', max_length=36)),
                ('datum_begin_geldigheid_openbare_ruimte', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de OPENBARE RUIMTE formeel is benoemd.', max_length=9)),
                ('datum_einde_geldigheid_openbare_ruimte', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop formeel is besloten de OPENBARE RUIMTE niet langer te laten bestaan.', max_length=9, null=True)),
                ('woonplaatsnaam', models.CharField(max_length=80)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='OverigeAdresseerbaarObjectAanduidingObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('woonplaatsnaam', models.CharField(max_length=80)),
                ('naam_openbare_ruimte', models.CharField(help_text='Een door het bevoegde gemeentelijke orgaan aan een OPENBARE RUIMTE toegekende benaming', max_length=80)),
                ('huisletter', models.CharField(blank=True, max_length=1, null=True)),
                ('huisnummer', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(99999)])),
                ('huisnummertoevoeging', models.CharField(blank=True, max_length=4, null=True)),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('datum_begin_geldigheid_adresseerbaar_object_aanduiding', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de ADRESSEERBAAR OBJECT AANDUIDING formeel is vastgesteld.', max_length=9)),
                ('datum_einde_geldigheid_adresseerbaar_object_aanduiding', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de ADRESSEERBAAR OBJECT AANDUIDING formeel is ingetrokken.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='OverigGebouwdObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('datum_begin_geldigheid', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop vangeldigheid gebouwd gemeentewege is vastgesteld dat de bouwwerkzaamheden betreffende de oprichting van een GEBOUWD OBJECT conform de vergunning, de melding of de aanschrijving zijn uitgevoerd.', max_length=9)),
                ('datum_einde_geldigheid', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het gebouwd object is gesloopt volgens de sloopgereedmelding.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
                ('locatieadres', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.AdresMetPostcode')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='OverigTerreinObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('datum_begin_geldigheid', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop van gemeentewege het benoemd terrein formeel is aangewezen.', max_length=9)),
                ('datum_einde_geldigheid', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop van gemeentewege het benoemd terrein formeel is ingetrokken.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('benoemd_terrein_identificatie', models.ForeignKey(help_text='De unieke aanduiding van een OVERIG BENOEMD TERREIN.', on_delete=django.db.models.deletion.CASCADE, to='rsgb.BAGObjectnummering')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
                ('officieel_adres', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.AdresMetPostcode')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='PandObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('datum_begin_geldigheid_pand', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop van gemeentewege is vastgesteld dat de bouwwerkzaamheden betreffende de oprichting van een PAND conform de vergunning, de melding of de aanschrijving zijn uitgevoerd.', max_length=9, null=True)),
                ('datum_einde_geldigheid_pand', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het pand is gesloopt volgens de sloopgereedmelding.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='SpoorbaanDeelObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('type_spoorbaan', models.CharField(choices=[('breedspoor', 'breedspoor'), ('normaalspoor', 'normaalspoor'), ('smalspoor', 'smalspoor'), ('spoorbaan', 'spoorbaan')], help_text='Specificatie van het soort Spoorbaan', max_length=40)),
                ('datum_begin_geldigheid_spoorbaandeel', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het spoorbaandeel is ontstaan.', max_length=9, null=True)),
                ('datum_einde_geldigheid_spoorbaandeel', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het spoorbaandeel ongeldig is geworden.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='StandPlaatsObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('datum_begin_geldigheid_benoemd_terrein', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop van gemeentewege het benoemd terrein formeel is aangewezen.', max_length=9)),
                ('datum_eind_geldigheid_benoemd_terrein', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop van gemeentewege het benoemd terrein formeel is ingetrokken.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('hoofdadres', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.AdresMetPostcode')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('datum_status_gezet', zaakmagazijn.utils.fields.StUFDateTimeField(help_text='De datum waarop de ZAAK de status heeft verkregen.', max_length=18)),
                ('statustoelichting', models.TextField(blank=True, help_text='Een, voor de initiator van de zaak relevante, toelichting op de status van een zaak.', max_length=1000, null=True)),
                ('indicatie_laatst_gezette_status', models.CharField(choices=[('J', 'Ja'), ('N', 'Nee')], default='N', help_text='Aanduiding of het de laatst bekende bereikte status betreft.', max_length=1)),
            ],
            options={
                'verbose_name_plural': 'Statussen',
            },
            bases=('rgbz.object',),
        ),
        migrations.CreateModel(
            name='TerreinDeelObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('type_terrein', models.CharField(max_length=40)),
                ('datum_begin_geldigheid_terreindeel', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop het terreindeel is ontstaan.', max_length=9)),
                ('datum_einde_geldigheid_terreindeel', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het terreindeel ongeldig is geworden.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='VerblijfsObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('datum_begin_geldigheid_gebouwd_object', zaakmagazijn.utils.fields.StUFDateField(help_text='gemeentewege is vastgesteld dat de bouwwerkzaamheden betreffende de oprichting van een GEBOUWD OBJECT conform de vergunning, de melding of de aanschrijving zijn uitgevoerd.', max_length=9)),
                ('datum_eind_geldigheid_gebouwd_object', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het gebouwd geldigheid is gesloopt volgens de object sloopgereedmelding.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('genoemd_object_identificatie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.BAGObjectnummering')),
                ('hoofdadres', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.AdresMetPostcode')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='WaterdeelObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('type_waterdeel', models.CharField(help_text='Specificatie van het soort water', max_length=50)),
                ('datum_begin_geldigheid_waterdeel', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop het waterdeel is ontstaan.', max_length=9)),
                ('datum_einde_geldigheid_waterdeel', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het waterdeel ongeldig is geworden.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='WegdeelObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('datum_begin_geldigheid_wegdeel', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop het wegdeel is ontstaan', max_length=9)),
                ('datum_einde_geldigheid_wegdeel', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop het wegdeel ongeldig is geworden.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='WijkObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('wijkcode', models.CharField(help_text='De code behorende bij de naam van de wijk.', max_length=2)),
                ('wijknaam', models.CharField(help_text='De naam van de wijk, zoals die door het CBS wordt gebruikt.', max_length=40)),
                ('datum_begin_geldigheid_wijk', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de wijk is gecreëerd.', max_length=9)),
                ('datum_eind_geldigheid_wijk', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop een wijk is komen te vervallen.', max_length=9, null=True)),
                ('gemeentecode', models.CharField(help_text='Een numerieke aanduiding waarmee een Nederlandse gemeente uniek wordt aangeduid', max_length=4)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='WoonplaatsObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('woonplaatsnaam', models.CharField(help_text='De door het bevoegde gemeentelijke orgaan aan een WOONPLAATS toegekende benaming.', max_length=80)),
                ('datum_begin_geldigheid_woonplaats', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de woonplaats is ontstaan', max_length=9)),
                ('datum_einde_geldigheid_woonplaats', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de woonplaats is komen te vervallen', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='WozdeelObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('nummer_wozdeelobject', models.CharField(help_text='Uniek identificatienummer voor het deelobject binnen een WOZ-object.', max_length=6)),
                ('datum_begin_geldigheid_deelobject', zaakmagazijn.utils.fields.StUFDateField(help_text='Een aanduiding op welk tijdstip een deelobject is ontstaan.', max_length=9)),
                ('datum_einde_geldigheid_deelobject', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='Een aanduiding op welk tijdstip een deelobject is beëindigd.', max_length=9, null=True)),
                ('woz_objectnummer', models.CharField(help_text='De unieke aanduiding van een WOZ-OBJECT.', max_length=12)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('code_wozdeelobject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.Deelobjectcode')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='WozObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('datum_begin_geldigheid_wozobject', zaakmagazijn.utils.fields.StUFDateField(help_text='Een aanduiding op welk tijdstip een object is ontstaan.', max_length=9)),
                ('datum_einde_geldigheid_wozobject', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='Een aanduiding op welk tijdstip een object is beëindigd.', max_length=9, null=True)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('adresaanduiding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.AdresMetPostcode')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
                ('soortobjectcode', models.ForeignKey(help_text='Aanduiding van het soort object ten behoeve van een correcte bepaling van de waarde.', on_delete=django.db.models.deletion.CASCADE, to='rsgb.SoortWOZObject')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='WozWaardeObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('vastgestelde_waarde', models.CharField(help_text='Waarde van het WOZ-object zoals deze in het kader van de Wet WOZ is vastgesteld.', max_length=11)),
                ('waardepeildatum', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarnaar de waarde van het WOZ-object wordt bepaald.', max_length=9)),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.CreateModel(
            name='ZakelijkRechtObject',
            fields=[
                ('object_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Object')),
                ('naam', models.TextField(blank=True, help_text='De benaming van het OBJECT indien dit een SUBJECT of specialisatie daarvan is.', max_length=500, null=True)),
                ('geometrie', zaakmagazijn.utils.fields.GMLField(blank=True, help_text='De minimaal tweedimensionale geometrische representatie van het OBJECT.', null=True)),
                ('ingangsdatum_recht', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de notariële akte is ingeschreven of anderszins een brondocument waar het zakelijk recht op berust is ingeschreven.', max_length=9, null=True)),
                ('einddatum_recht', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De laatste dag waarop het recht volgens het brondocument, op grond waarvan het recht is opgevoerd, nog van toepassing zal zijn.', max_length=9, null=True)),
                ('aanduiding_aard_verkregen_recht', models.ForeignKey(help_text='Een aanduiding voor de aard van het recht.', on_delete=django.db.models.deletion.CASCADE, to='rsgb.AardZakelijkRecht')),
                ('adres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.Adres')),
                ('kadastrale_aanduiding', models.ForeignKey(blank=True, help_text='De kadastrale aanduiding van het OBJECT', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduiding')),
                ('kadastrale_aanduiding_appartementsrecht', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.KadastraleAanduidingAppartementsRecht')),
                ('kadastrale_aanduiding_kadastraal_perceel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kadastrale_aanduiding_kadastraal_perceel', to='rsgb.KadastraleAanduidingKadastraalPerceel')),
                ('kadastrale_identificatie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kadastrale_identificatie', to='rsgb.CompositeID')),
            ],
            bases=('rgbz.object', models.Model),
        ),
        migrations.AddField(
            model_name='zaakobject',
            name='object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Object'),
        ),
        migrations.AddField(
            model_name='zaakobject',
            name='zaak',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Zaak'),
        ),
        migrations.AddField(
            model_name='zaak',
            name='gerelateerd_met',
            field=models.ManyToManyField(blank=True, related_name='gerelateerdezaken', through='rgbz.ZakenRelatie', to='rgbz.Zaak'),
        ),
        migrations.AddField(
            model_name='zaak',
            name='hoofdzaak',
            field=models.ForeignKey(blank=True, help_text='De verwijzing naar de ZAAK, waarom verzocht is door de initiator daarvan, die behandeld wordt in twee of meer separate ZAAKen waarvan de onderhavige ZAAK er één is.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deelzaken', to='rgbz.Zaak'),
        ),
        migrations.AddField(
            model_name='zaak',
            name='zaaktype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.ZaakType'),
        ),
        migrations.AddField(
            model_name='statustype',
            name='zaaktype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.ZaakType'),
        ),
        migrations.AddField(
            model_name='rol',
            name='zaak',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Zaak'),
        ),
        migrations.AddField(
            model_name='object',
            name='object_zaken',
            field=models.ManyToManyField(related_name='gerelateerde_aan', through='rgbz.ZaakObject', to='rgbz.Zaak'),
        ),
        migrations.AddField(
            model_name='klantcontact',
            name='zaak',
            field=models.ForeignKey(help_text='De ZAAK waarop het KLANTCONTACT betrekking heeft.', on_delete=django.db.models.deletion.CASCADE, to='rgbz.Zaak'),
        ),
        migrations.AddField(
            model_name='informatieobjecttype',
            name='informatieobjecttypeomschrijving_generiek',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rgbz.InformatieObjectTypeOmschrijvingGeneriek'),
        ),
        migrations.AddField(
            model_name='gerelateerdeexternezaak',
            name='zaak',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Zaak'),
        ),
        migrations.AddField(
            model_name='eigenschap',
            name='zaak',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eigenschap', to='rgbz.Zaak'),
        ),
        migrations.AddField(
            model_name='anderzaakobject',
            name='zaak',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Zaak'),
        ),
        migrations.CreateModel(
            name='EnkelvoudigInformatieObject',
            fields=[
                ('informatieobject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.InformatieObject')),
                ('formaat', models.CharField(blank=True, help_text='De code voor de wijze waarop de inhoud van het ENKELVOUDIG INFORMATIEOBJECT is vastgelegd in een computerbestand.', max_length=255, null=True)),
                ('taal', models.CharField(help_text='Een taal van de intellectuele inhoud van het ENKELVOUDIG INFORMATIEOBJECT', max_length=20)),
                ('link', models.CharField(blank=True, help_text='De URL waarmee de inhoud van het INFORMATIEOBJECT op te vragen is.', max_length=200, null=True)),
                ('bestandsomvang', models.IntegerField(blank=True, help_text='Ruimtebeslag op het digitale opslagmedium waarin het fysieke bestand met de inhoud van het INFORMATIEOBJECT is vastgelegd', null=True)),
                ('_object_id', models.TextField(blank=True, help_text='CMIS storage object id, internal use only')),
                ('bestandsnaam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rgbz.Bestandsnaam')),
                ('integriteit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rgbz.Integriteit')),
            ],
            options={
                'verbose_name_plural': 'Enkelvoudige informatie objecten',
            },
            bases=('rgbz.informatieobject', models.Model),
        ),
        migrations.CreateModel(
            name='Medewerker',
            fields=[
                ('betrokkene_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Betrokkene')),
                ('geslachtsaanduiding', models.CharField(choices=[('M', 'Man'), ('V', 'Vrouw'), ('O', 'Onbekend')], help_text='Een aanduiding die aangeeft of de persoon een man of een vrouw is, of dat het geslacht nog onbekend is.', max_length=1)),
                ('telefoonnummer', models.CharField(blank=True, help_text='Telefoonnummer waaronder de MEDEWERKER in de regel bereikbaar is.', max_length=20, null=True)),
                ('emailadres', models.EmailField(blank=True, help_text='Elektronisch postadres waaronder het subject in de regel bereikbaar is.', max_length=254, null=True)),
                ('medewerkeridentificatie', models.CharField(help_text='Een korte unieke aanduiding van de MEDEWERKER.', max_length=24)),
                ('achternaam', models.CharField(help_text='De achternaam zoals de MEDEWERKER die in het dagelijkse verkeer gebruikt.', max_length=200)),
                ('datum_uit_dienst', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='Een aanduiding van de datum waarop dearbeidsplaatsvervulling eindigt.', max_length=9, null=True)),
                ('functie', models.CharField(help_text='De aanduiding van de taken, rechten en plichten die de MEDEWERKER heeft of heeft gehad binnen de zaakbehandelende organisatie.', max_length=50)),
                ('voorletters', models.CharField(help_text='De verzameling letters die gevormd wordt door de eerste letter van alle in volgorde voorkomende voornamen.', max_length=20)),
                ('voorvoegsel_achternaam', models.CharField(blank=True, help_text='Dat deel van de geslachtsnaam dat voorkomt in Tabel 36 (GBA), voorvoegseltabel, en door een spatie van de geslachtsnaam is', max_length=10, null=True)),
                ('medewerkertoelichting', models.TextField(blank=True, help_text='Toelichting bij en/of over de medewerker.', max_length=1000, null=True)),
                ('roepnaam', models.CharField(help_text='Naam waarmee de werknemer wordt aangesproken.', max_length=30)),
            ],
            bases=('rgbz.betrokkene', models.Model),
        ),
        migrations.CreateModel(
            name='NatuurlijkPersoon',
            fields=[
                ('betrokkene_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Betrokkene')),
                ('burgerservicenummer', models.PositiveIntegerField(help_text='Het burgerservicenummer, bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.')),
                ('geslachtsaanduiding', models.CharField(choices=[('M', 'Man'), ('V', 'Vrouw'), ('O', 'Onbekend')], help_text='Een aanduiding die aangeeft of de persoon een man of een vrouw is, of dat het geslacht nog onbekend is.', max_length=1)),
                ('telefoonnummer', models.CharField(blank=True, help_text='Telefoonnummer waaronder de MEDEWERKER in de regel bereikbaar is.', max_length=20, null=True)),
                ('emailadres', models.EmailField(blank=True, help_text='Elektronisch postadres waaronder het subject in de regel bereikbaar is.', max_length=254, null=True)),
                ('faxnummer', models.CharField(help_text='Faxnummer waaronder het subject in de regel bereikbaar is.', max_length=20)),
                ('nummer_ander_natuurlijk_persoon', models.CharField(help_text='Het door de gemeente uitgegeven unieke nummer voor een ANDER NATUURLIJK PERSOON', max_length=17)),
                ('aanduiding_naamgebruik', models.CharField(blank=True, choices=[('E', 'eigen'), ('P', 'Partner'), ('V', 'Partner, eigen'), ('N', 'Eigen, partner')], help_text='Een aanduiding voor de wijze van aanschrijving van de NATUURLIJKe PERSOON.', max_length=1, null=True)),
                ('geboortedatum_ingeschreven_persoon', zaakmagazijn.utils.fields.StUFDateField(max_length=9)),
                ('geboortedatum_ander_natuurlijk_persoon', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9, null=True)),
                ('overlijdensdatum_ingeschreven_persoon', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9, null=True)),
                ('overlijdensdatum_ander_natuurlijk_persoon', zaakmagazijn.utils.fields.StUFDateField(blank=True, max_length=9, null=True)),
                ('academische_titel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.AcademischeTitel')),
                ('correspondentieadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='correspondentieadres', to='rsgb.Correspondentieadres')),
                ('naam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Naam')),
                ('naam_aanschrijving', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsgb.NaamAanschrijving')),
                ('postadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.PostAdres')),
                ('rekeningnummer', models.ForeignKey(blank=True, help_text='De gegevens inzake de bankrekening waarmee het SUBJECT in de regel financieel communiceert.', null=True, on_delete=django.db.models.deletion.CASCADE, to='rgbz.Rekeningnummer')),
                ('verblijf_buitenland', models.ForeignKey(blank=True, help_text='De gegevens over het verblijf in het buitenland', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.VerblijfBuitenland')),
                ('verblijfadres', models.ForeignKey(blank=True, help_text='De gegevens over het verblijf en adres van de NATUURLIJK PERSOON', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verblijfadres', to='rsgb.VerblijfAdres')),
            ],
            bases=('rgbz.betrokkene', models.Model),
        ),
        migrations.CreateModel(
            name='NietNatuurlijkPersoon',
            fields=[
                ('betrokkene_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Betrokkene')),
                ('rsin', models.PositiveIntegerField(help_text='Het door een kamer toegekend uniek nummer voor de INGESCHREVEN NIET-NATUURLIJK PERSOON')),
                ('statutaire_naam', models.TextField(blank=True, help_text='Naam van de niet-natuurlijke persoon zoals deze is vastgelegd in de statuten (rechtspersoon) of in de vennootschapsovereenkomst is overeengekomen (Vennootschap onder firma of Commanditaire vennootschap).', max_length=500, null=True)),
                ('datum_aanvang', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum van aanvang van de NIET-NATUURLIJK PERSOON', max_length=9)),
                ('datum_beeindiging', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum van beëindiging van de NIET-NATUURLIJK PERSOON.', max_length=9, null=True)),
                ('telefoonnummer', models.CharField(blank=True, help_text='Telefoonnummer waaronder de MEDEWERKER in de regel bereikbaar is.', max_length=20, null=True)),
                ('emailadres', models.EmailField(blank=True, help_text='Elektronisch postadres waaronder het subject in de regel bereikbaar is.', max_length=254, null=True)),
                ('faxnummer', models.CharField(help_text='Faxnummer waaronder het subject in de regel bereikbaar is.', max_length=20)),
                ('naam', models.CharField(blank=True, help_text='De benaming van de BETROKKENE indien dit een (NIET) NATUURLIJK PERSOON, VESTIGING of specialisatie daarvan is.', max_length=200, null=True)),
                ('nummer_ander_buitenlands_nietnatuurlijk_persoon', models.CharField(help_text='Het door de gemeente uitgegeven uniekenummer voor een ANDER NIET-NATUURLIJK PERSOON', max_length=17)),
                ('correspondentieadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.Correspondentieadres')),
                ('postadres', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.PostAdres')),
                ('rekeningnummer', models.ForeignKey(blank=True, help_text='De gegevens inzake de bankrekening waarmee het SUBJECT in de regel financieel communiceert.', null=True, on_delete=django.db.models.deletion.CASCADE, to='rgbz.Rekeningnummer')),
                ('verblijf_buitenland', models.ForeignKey(blank=True, help_text='De gegevens over het verblijf in het buitenland', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.VerblijfBuitenland')),
            ],
            bases=('rgbz.betrokkene', models.Model),
        ),
        migrations.CreateModel(
            name='OrganisatorischeEenheid',
            fields=[
                ('betrokkene_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Betrokkene')),
                ('organisatieidentificatie', models.PositiveIntegerField(help_text='Het RSIN van de organisatie zijnde een Niet-natuurlijk persoon waarvan de ORGANISATORISCHE EENHEID deel uit maakt.')),
                ('datum_ontstaan', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum waarop de organisatorische eenheid is ontstaan.', max_length=9)),
                ('datum_opheffing', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum waarop de organisatorische eenheid is opgeheven.', max_length=9, null=True)),
                ('naam', models.CharField(help_text='De feitelijke naam van de organisatorische eenheid.', max_length=50)),
                ('telefoonnummer', models.CharField(blank=True, help_text='Telefoonnummer waaronder de MEDEWERKER in de regel bereikbaar is.', max_length=20, null=True)),
                ('emailadres', models.EmailField(blank=True, help_text='Elektronisch postadres waaronder het subject in de regel bereikbaar is.', max_length=254, null=True)),
                ('faxnummer', models.CharField(help_text='Faxnummer waaronder het subject in de regel bereikbaar is.', max_length=20)),
                ('organisatieeenheididentificatie', models.CharField(help_text='Een korte identificatie van de organisatorische eenheid.', max_length=24)),
                ('naam_verkort', models.CharField(blank=True, help_text='Een verkorte naam voor de organisatorische eenheid.', max_length=25, null=True)),
                ('omschrijving', models.CharField(blank=True, help_text='Een omschrijving van de organisatorische eenheid.', max_length=80, null=True)),
                ('toelichting', models.TextField(blank=True, help_text='Toelichting bij de organisatorische eenheid.', max_length=1000, null=True)),
                ('contactpersoon', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisatorische_eenheid_contactpersoon', to='rgbz.Medewerker')),
                ('verantwoordelijke', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisatorische_eenheid_verantwoordelijke', to='rgbz.Medewerker')),
            ],
            options={
                'verbose_name_plural': 'Organisatorische eenheden',
            },
            bases=('rgbz.betrokkene', models.Model),
        ),
        migrations.CreateModel(
            name='SamengesteldInformatieObject',
            fields=[
                ('informatieobject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.InformatieObject')),
            ],
            bases=('rgbz.informatieobject',),
        ),
        migrations.CreateModel(
            name='Vestiging',
            fields=[
                ('betrokkene_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Betrokkene')),
                ('telefoonnummer', models.CharField(blank=True, help_text='Telefoonnummer waaronder de MEDEWERKER in de regel bereikbaar is.', max_length=20, null=True)),
                ('emailadres', models.EmailField(blank=True, help_text='Elektronisch postadres waaronder het subject in de regel bereikbaar is.', max_length=254, null=True)),
                ('faxnummer', models.CharField(help_text='Faxnummer waaronder het subject in de regel bereikbaar is.', max_length=20)),
                ('naam', models.CharField(blank=True, help_text='De benaming van de BETROKKENE indien dit een (NIET) NATUURLIJK PERSOON, VESTIGING of specialisatie daarvan is.', max_length=200, null=True)),
                ('handelsnaam', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(help_text='De naam van de vestiging waaronder gehandeld wordt.', max_length=625), size=None)),
                ('verkorte_naam', models.CharField(blank=True, help_text='De administratieve naam in het handelsregister indien de naam langer is dan 45 karakters', max_length=45, null=True)),
                ('datum_aanvang', zaakmagazijn.utils.fields.StUFDateField(help_text='De datum van aanvang van de vestiging.', max_length=9)),
                ('datum_beeindiging', zaakmagazijn.utils.fields.StUFDateField(blank=True, help_text='De datum van beëindiging van de vestiging', max_length=9, null=True)),
                ('_vestigingtype_model', models.CharField(blank=True, max_length=50, null=True)),
            ],
            bases=('rgbz.betrokkene', models.Model),
        ),
        migrations.AddField(
            model_name='zaakinformatieobject',
            name='informatieobject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.InformatieObject'),
        ),
        migrations.AddField(
            model_name='zaakinformatieobject',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Status'),
        ),
        migrations.AddField(
            model_name='zaak',
            name='informatieobjecten',
            field=models.ManyToManyField(related_name='informatieobjecten', through='rgbz.ZaakInformatieObject', to='rgbz.InformatieObject'),
        ),
        migrations.AddField(
            model_name='verzending',
            name='betrokkene',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Betrokkene'),
        ),
        migrations.AddField(
            model_name='verzending',
            name='informatieobject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.InformatieObject'),
        ),
        migrations.AddField(
            model_name='status',
            name='rol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Rol'),
        ),
        migrations.AddField(
            model_name='status',
            name='status_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.StatusType'),
        ),
        migrations.AddField(
            model_name='status',
            name='zaak',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Zaak'),
        ),
        migrations.AddField(
            model_name='rol',
            name='betrokkene',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Betrokkene'),
        ),
        migrations.AlterUniqueTogether(
            name='object',
            unique_together=set([('identificatie', 'objecttype')]),
        ),
        migrations.AddField(
            model_name='informatieobject',
            name='betrokkene',
            field=models.ManyToManyField(blank=True, related_name='informatieobjecten', through='rgbz.Verzending', to='rgbz.Betrokkene'),
        ),
        migrations.AddField(
            model_name='informatieobject',
            name='gebruiksrechten',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rgbz.GebruiksRechten'),
        ),
        migrations.AddField(
            model_name='informatieobject',
            name='informatieobjecttype',
            field=models.ForeignKey(help_text='Aanduiding van de aard van het INFORMATIEOBJECT zoals gehanteerd door de zaakbehandelende organisatie.', on_delete=django.db.models.deletion.CASCADE, to='rgbz.InformatieObjectType'),
        ),
        migrations.AddField(
            model_name='informatieobject',
            name='ondertekening',
            field=models.ForeignKey(blank=True, help_text='Aanduiding van de rechtskracht van een informatieobject.', null=True, on_delete=django.db.models.deletion.CASCADE, to='rgbz.Ondertekening'),
        ),
        migrations.AddField(
            model_name='betrokkene',
            name='zaken',
            field=models.ManyToManyField(through='rgbz.Rol', to='rgbz.Zaak'),
        ),
        migrations.AddField(
            model_name='besluitinformatieobject',
            name='besluit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Besluit'),
        ),
        migrations.AddField(
            model_name='besluitinformatieobject',
            name='informatieobject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.InformatieObject'),
        ),
        migrations.AddField(
            model_name='besluit',
            name='informatieobject',
            field=models.ManyToManyField(blank=True, through='rgbz.BesluitInformatieObject', to='rgbz.InformatieObject'),
        ),
        migrations.AddField(
            model_name='besluit',
            name='zaak',
            field=models.ForeignKey(help_text='Aanduiding van de ZAAK waarbinnen het BESLUIT genomen is.', on_delete=django.db.models.deletion.CASCADE, to='rgbz.Zaak'),
        ),
        migrations.CreateModel(
            name='VestigingVanZaakBehandelendeOrganisatie',
            fields=[
                ('vestiging_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rgbz.Vestiging')),
            ],
            bases=('rgbz.vestiging',),
        ),
        migrations.AddField(
            model_name='zaaktype',
            name='medewerker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rgbz.Medewerker'),
        ),
        migrations.AddField(
            model_name='zaaktype',
            name='organisatorische_eenheid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rgbz.OrganisatorischeEenheid'),
        ),
        migrations.AlterUniqueTogether(
            name='zaak',
            unique_together=set([('zaakidentificatie', 'bronorganisatie')]),
        ),
        migrations.AlterUniqueTogether(
            name='wozdeelobject',
            unique_together=set([('nummer_wozdeelobject', 'woz_objectnummer')]),
        ),
        migrations.AlterUniqueTogether(
            name='wijkobject',
            unique_together=set([('wijkcode', 'gemeentecode')]),
        ),
        migrations.AddField(
            model_name='vestiging',
            name='correspondentieadres',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rsgb.Correspondentieadres'),
        ),
        migrations.AddField(
            model_name='vestiging',
            name='locatieadres',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locatieadres', to='rsgb.Locatieadres'),
        ),
        migrations.AddField(
            model_name='vestiging',
            name='postadres',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postadress', to='rsgb.PostAdres'),
        ),
        migrations.AddField(
            model_name='vestiging',
            name='rekeningnummer',
            field=models.ForeignKey(blank=True, help_text='De gegevens inzake de bankrekening waarmee het SUBJECT in de regel financieel communiceert.', null=True, on_delete=django.db.models.deletion.CASCADE, to='rgbz.Rekeningnummer'),
        ),
        migrations.AddField(
            model_name='vestiging',
            name='verblijf_buitenland',
            field=models.ForeignKey(blank=True, help_text='De gegevens over het verblijf in het buitenland', null=True, on_delete=django.db.models.deletion.CASCADE, to='rsgb.VerblijfBuitenland'),
        ),
        migrations.AlterUniqueTogether(
            name='status',
            unique_together=set([('zaak', 'datum_status_gezet')]),
        ),
        migrations.AddField(
            model_name='medewerker',
            name='organisatorische_eenheid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rgbz.OrganisatorischeEenheid'),
        ),
        migrations.AddField(
            model_name='klantcontactpersoon',
            name='vestiging',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.Vestiging'),
        ),
        migrations.AddField(
            model_name='klantcontact',
            name='medewerker',
            field=models.ForeignKey(help_text='De MEDEWERKER die het individuele contact met de klant over een ZAAK heeft gehad.', on_delete=django.db.models.deletion.CASCADE, to='rgbz.Medewerker'),
        ),
        migrations.AddField(
            model_name='klantcontact',
            name='natuurlijk_persoon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rgbz.NatuurlijkPersoon'),
        ),
        migrations.AddField(
            model_name='klantcontact',
            name='vestiging',
            field=models.ManyToManyField(blank=True, through='rgbz.KlantContactpersoon', to='rgbz.Vestiging'),
        ),
        migrations.AlterUniqueTogether(
            name='informatieobject',
            unique_together=set([('informatieobjectidentificatie', 'bronorganisatie')]),
        ),
        migrations.AddField(
            model_name='enkelvoudiginformatieobject',
            name='samengesteld_informatieobject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rgbz.SamengesteldInformatieObject'),
        ),
        migrations.AlterUniqueTogether(
            name='buurtobject',
            unique_together=set([('buurtcode', 'wijkcode')]),
        ),
        migrations.AddField(
            model_name='organisatorischeeenheid',
            name='gevestigd_in',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rgbz.VestigingVanZaakBehandelendeOrganisatie'),
        ),
        migrations.AlterUniqueTogether(
            name='medewerker',
            unique_together=set([('organisatorische_eenheid', 'medewerkeridentificatie')]),
        ),
        migrations.AlterUniqueTogether(
            name='organisatorischeeenheid',
            unique_together=set([('organisatieidentificatie', 'organisatieeenheididentificatie')]),
        ),
    ]
